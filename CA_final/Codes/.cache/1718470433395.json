{"date":"2024-06-15T16:53:44.169Z","courseId":"17","assignment":"AP-Spring03-CA6-phase3","trace":{"version":28,"content":"#include \"UTMS.hpp\"\n#include \"Orders.hpp\"\n#include \"/home/sajjad/AP_A6/finish/server/server.hpp\"\n#include \"/home/sajjad/AP_A6/finish/examples/handlers.hpp\"\n\n// int main(int argc, char *argv[])\n// {\n//     if (argc != 5)\n//     {\n//         cout << ERROR<<endl;\n//         return 0;\n//     }\n//     vector<string> pathes;\n\n//     for (int i = 1; i < 5; i++)\n//     {\n//         pathes.push_back(argv[i]);\n//     }\n//     UTMS *utms = new UTMS(pathes);\n//     Orders *orders = new Orders(utms);\n//     orders->input();\n//     delete orders;\n//     delete utms;\n//     return 1;\n// }\n\nvoid mapServerPaths(Server &server,Orders *orders)\n{\n    server.setNotFoundErrPage(\"static/404.html\");\n    \n    server.get(\"/home.png\", new ShowImage(\"static/home.png\"));\n    server.get(\"/rand\", new RandomNumberHandler());\n    server.get(\"/login\", new ShowPage(\"static/logincss.html\"));\n    server.post(\"/login\", new LoginHandler(orders));\n    server.get(\"/up\", new ShowPage(\"static/upload_form.html\"));\n    server.post(\"/up\", new UploadHandler());\n    server.get(\"/colors\", new ColorHandler(\"template/colors.html\"));\n    // server.get(\"/music\", new ShowPage(\"static/music.html\"));\n    // server.get(\"/music/moonlight.mp3\", new ShowFile(\"static/moonlight.mp3\", \"audio/mpeg\"));\n}\n\nint main(int argc, char **argv)\n{\n\n    if (argc != 5)\n    {\n        cout << ERROR << endl;\n        return 0;\n    }\n    vector<string> pathes;\n    for (int i = 1; i < 5; i++)\n    {\n        pathes.push_back(argv[i]);\n    }\n    UTMS *utms = new UTMS(pathes);\n    Orders *orders = new Orders(utms);\n    try\n    {\n        int port = 5000;\n        Server server(port);\n\n        mapServerPaths(server,orders);\n\n        cout << \"Server running on port: \" << port << endl;\n        server.run();\n    }\n    catch (const invalid_argument &e)\n    {\n        cerr << e.what() << endl;\n        delete orders;\n        delete utms;\n    }\n    catch (const Server::Exception &e)\n    {\n        cerr << e.getMessage() << endl;\n        delete orders;\n        delete utms;\n    }\n    delete orders;\n    delete utms;\n    return 0;\n}\n","filename":"/home/sajjad/AP_A6/finish/main.cpp","identifier":"Text Change","lineCount":83,"languageId":"cpp"},"failed":false}